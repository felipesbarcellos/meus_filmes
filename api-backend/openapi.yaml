openapi: 3.0.0
info:
  title: MeusFilmes API
  version: 1.0.0
  description: API for the MeusFilmes application, providing access to movie data, user lists, and watched history.
servers:
  - url: /api # Adjusted to reflect Nginx proxy
    description: Main API access via Nginx proxy
paths:
  /health:
    get:
      summary: Health Check
      description: Checks the health of the API and its database connection.
      tags:
        - General
      responses:
        '200':
          description: API is healthy and database is connected.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  database:
                    type: string
                    example: connected
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: '1.0.0'
        '500':
          description: API is unhealthy or database is disconnected.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: unhealthy
                  database:
                    type: string
                    example: disconnected
                  error:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
  # TODO: Define all other API paths here.
  # Example for /register:
  # /register:
  #   post:
  #     summary: Register a new user
  #     tags:
  #       - Authentication
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               name:
  #                 type: string
  #                 example: John Doe
  #               email:
  #                 type: string
  #                 format: email
  #                 example: john.doe@example.com
  #               password:
  #                 type: string
  #                 format: password
  #                 example: s3cr3t
  #             required:
  #               - name
  #               - email
  #               - password
  #     responses:
  #       '200':
  #         description: User registered successfully
  #       '400':
  #         description: Missing fields
  #       '409':
  #         description: Email already registered

  /movie/watched/:
    post:
      summary: Marca um filme como assistido para o usuário autenticado
      tags:
        - Watched
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tmdb_id:
                  type: integer
                  example: 603692
                watched_at:
                  type: string
                  format: date
                  example: '2024-05-20'
              required:
                - tmdb_id
                - watched_at
      responses:
        '201':
          description: Filme marcado como assistido
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  tmdb_id:
                    type: integer
                  watched_at:
                    type: string
                  msg:
                    type: string
        '200':
          description: Data de assistido atualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  tmdb_id:
                    type: integer
                  watched_at:
                    type: string
                  msg:
                    type: string
        '400':
          description: Dados ausentes ou inválidos
        '500':
          description: Erro ao salvar filme assistido
    get:
      summary: Lista todos os filmes assistidos do usuário autenticado
      tags:
        - Watched
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de filmes assistidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  watched:
                    type: array
                    items:
                      type: object
                      properties:
                        tmdb_id:
                          type: integer
                        watched_at:
                          type: string
    
  /movie/watched/{tmdb_id}:
    delete:
      summary: Remove um filme da lista de assistidos do usuário autenticado
      tags:
        - Watched
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: tmdb_id
          schema:
            type: integer
          required: true
          description: ID do filme no TMDB
      responses:
        '200':
          description: Filme removido da lista de assistidos
        '404':
          description: Filme não encontrado na lista de assistidos

  /movie/watched/count:
    get:
      summary: Conta o número de filmes assistidos pelo usuário autenticado, com filtro opcional por data
      tags:
        - Watched
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          required: false
          description: Data inicial (YYYY-MM-DD)
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          required: false
          description: Data final (YYYY-MM-DD)
      responses:
        '200':
          description: Contagem de filmes assistidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  count:
                    type: integer
        '400':
          description: Formato de data inválido

  /tmdb/config:
    get:
      summary: Obtém a configuração do TMDB (chave de API, base de imagens, etc)
      tags:
        - TMDB
      responses:
        '200':
          description: Configuração do TMDB retornada com sucesso
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Erro ao buscar configuração do TMDB

  /tmdb/popular:
    get:
      summary: Lista filmes populares do TMDB
      tags:
        - TMDB
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Página dos resultados
      responses:
        '200':
          description: Lista de filmes populares
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Erro ao buscar filmes populares

  /tmdb/movie/{tmdb_id}:
    get:
      summary: Detalhes de um filme pelo TMDB ID (usa cache local se disponível)
      tags:
        - TMDB
      parameters:
        - in: path
          name: tmdb_id
          schema:
            type: integer
          required: true
          description: ID do filme no TMDB
      responses:
        '200':
          description: Detalhes do filme
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Filme não encontrado
        '500':
          description: Erro inesperado

  /tmdb/search:
    get:
      summary: Busca filmes no TMDB por texto
      tags:
        - TMDB
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: Texto de busca
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Página dos resultados
      responses:
        '200':
          description: Resultados da busca
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Erro ao buscar filmes

  /tmdb/movie/{tmdb_id}/credits:
    get:
      summary: Créditos (elenco e equipe) de um filme
      tags:
        - TMDB
      parameters:
        - in: path
          name: tmdb_id
          schema:
            type: integer
          required: true
          description: ID do filme no TMDB
      responses:
        '200':
          description: Créditos do filme
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Erro ao buscar créditos

  /tmdb/movie/{tmdb_id}/recommendations:
    get:
      summary: Recomendações de filmes similares
      tags:
        - TMDB
      parameters:
        - in: path
          name: tmdb_id
          schema:
            type: integer
          required: true
          description: ID do filme no TMDB
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Página dos resultados
      responses:
        '200':
          description: Lista de recomendações
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Erro ao buscar recomendações

  /tmdb/genres:
    get:
      summary: Lista de gêneros de filmes (legado)
      tags:
        - TMDB
      responses:
        '200':
          description: Lista de gêneros
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Erro ao buscar gêneros

  /tmdb/movie/genres:
    get:
      summary: Lista de gêneros de filmes (novo endpoint)
      tags:
        - TMDB
      responses:
        '200':
          description: Lista de gêneros
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Erro ao buscar gêneros

  /tmdb/discover/movie:
    get:
      summary: Descobre filmes por gênero
      tags:
        - TMDB
      parameters:
        - in: query
          name: with_genres
          schema:
            type: string
          required: true
          description: IDs dos gêneros separados por vírgula
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Página dos resultados
      responses:
        '200':
          description: Lista de filmes descobertos
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Parâmetro de gênero ausente
        '500':
          description: Erro ao buscar filmes

  /lists/:
    get:
      summary: Lista todas as listas do usuário autenticado
      tags:
        - Lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listas do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    is_main:
                      type: boolean
    post:
      summary: Cria uma nova lista personalizada para o usuário autenticado
      tags:
        - Lists
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Lista criada
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  is_main:
                    type: boolean
                  user_id:
                    type: integer
        '400':
          description: Nome ausente

  /lists/add_movie:
    post:
      summary: Adiciona um filme a uma lista do usuário
      tags:
        - Lists
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: integer
                tmdb_id:
                  type: integer
              required:
                - list_id
                - tmdb_id
      responses:
        '201':
          description: Filme adicionado à lista
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  tmdb_id:
                    type: integer
        '400':
          description: Dados ausentes
        '404':
          description: Lista não encontrada
        '409':
          description: Filme já está na lista
        '500':
          description: Erro ao salvar filme

  /lists/{list_id}:
    get:
      summary: Detalhes de uma lista do usuário
      tags:
        - Lists
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: list_id
          schema:
            type: integer
          required: true
          description: ID da lista
      responses:
        '200':
          description: Detalhes da lista
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  is_main:
                    type: boolean
                  user_id:
                    type: integer
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        tmdb_id:
                          type: integer
        '404':
          description: Lista não encontrada
    delete:
      summary: Exclui uma lista personalizada do usuário
      tags:
        - Lists
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: list_id
          schema:
            type: integer
          required: true
          description: ID da lista
      responses:
        '200':
          description: Lista excluída
        '404':
          description: Lista não encontrada
        '403':
          description: Não é permitido excluir listas principais
    put:
      summary: Renomeia uma lista do usuário
      tags:
        - Lists
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: list_id
          schema:
            type: integer
          required: true
          description: ID da lista
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Lista renomeada
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  is_main:
                    type: boolean
                  user_id:
                    type: integer
        '400':
          description: Nome ausente
        '404':
          description: Lista não encontrada
        '403':
          description: Não é permitido renomear listas principais

  /lists/{list_id}/movies/{tmdb_id}:
    delete:
      summary: Remove um filme de uma lista do usuário
      tags:
        - Lists
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: list_id
          schema:
            type: integer
          required: true
          description: ID da lista
        - in: path
          name: tmdb_id
          schema:
            type: integer
          required: true
          description: ID do filme no TMDB
      responses:
        '200':
          description: Filme removido da lista
        '404':
          description: Lista ou filme não encontrado

  /lists/public/{list_id}:
    get:
      summary: Get public details of a list by its ID (no authentication required)
      tags:
        - Lists
      parameters:
        - in: path
          name: list_id
          schema:
            type: integer
          required: true
          description: List ID
      responses:
        '200':
          description: Public list details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  is_main:
                    type: boolean
                  user_id:
                    type: integer
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        tmdb_id:
                          type: integer
        '404':
          description: List not found

  /auth/register:
    post:
      summary: Registra um novo usuário
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: João da Silva
                email:
                  type: string
                  format: email
                  example: joao@email.com
                password:
                  type: string
                  format: password
                  example: senha123
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
        '400':
          description: Campos obrigatórios ausentes
        '409':
          description: Email já registrado

  /auth/login:
    post:
      summary: Login do usuário
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: joao@email.com
                password:
                  type: string
                  format: password
                  example: senha123
              required:
                - email
                - password
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
        '400':
          description: Campos obrigatórios ausentes
        '401':
          description: Credenciais inválidas

  /auth/recovery:
    post:
      summary: Solicita recuperação de senha
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: joao@email.com
              required:
                - email
      responses:
        '200':
          description: Instruções de recuperação enviadas (ou resposta genérica)
        '400':
          description: Email ausente
        '404':
          description: Email não encontrado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []

# You will need to manually add definitions for all your other API endpoints
# (e.g., /login, /lists, /movie/watched, /tmdb/*, etc.)
# following the OpenAPI 3.0 specification format.
# Pay close attention to request bodies, parameters (path, query), and responses for each.
